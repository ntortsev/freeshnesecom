{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"component\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport { useSlotProps } from '../utils';\nimport { getTabsListUnstyledUtilityClass } from './tabsListUnstyledClasses';\nimport useTabsList from '../useTabsList';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var orientation = ownerState.orientation;\n  var slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsListUnstyledUtilityClass));\n};\n\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/)\r\n *\r\n * API:\r\n *\r\n * - [TabsListUnstyled API](https://mui.com/base/api/tabs-list-unstyled/)\r\n */\nvar TabsListUnstyled = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref;\n  var component = props.component,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useTabsList = useTabsList(_extends({}, props, {\n      ref: ref\n    })),\n    isRtl = _useTabsList.isRtl,\n    orientation = _useTabsList.orientation,\n    getRootProps = _useTabsList.getRootProps,\n    processChildren = _useTabsList.processChildren;\n  var ownerState = _extends({}, props, {\n    isRtl: isRtl,\n    orientation: orientation\n  });\n  var classes = useUtilityClasses(ownerState);\n  var TabsListRoot = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  var tabsListRootProps = useSlotProps({\n    elementType: TabsListRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var processedChildren = processChildren();\n  return /*#__PURE__*/_jsx(TabsListRoot, _extends({}, tabsListRootProps, {\n    children: processedChildren\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabsListUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n  /**\r\n   * The props used for each slot inside the TabsList.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the TabsList.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default TabsListUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","useSlotProps","getTabsListUnstyledUtilityClass","useTabsList","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","orientation","slots","root","TabsListUnstyled","forwardRef","props","ref","_ref","component","_props$slotProps","slotProps","_props$slots","other","_useTabsList","isRtl","getRootProps","processChildren","classes","TabsListRoot","tabsListRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","processedChildren","children","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object"],"sources":["C:/Users/79507/Desktop/Новая папка/freeshnesecom/node_modules/@mui/base/TabsListUnstyled/TabsListUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"component\", \"slotProps\", \"slots\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport composeClasses from '../composeClasses';\r\nimport { useSlotProps } from '../utils';\r\nimport { getTabsListUnstyledUtilityClass } from './tabsListUnstyledClasses';\r\nimport useTabsList from '../useTabsList';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    orientation\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', orientation]\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getTabsListUnstyledUtilityClass));\r\n};\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/)\r\n *\r\n * API:\r\n *\r\n * - [TabsListUnstyled API](https://mui.com/base/api/tabs-list-unstyled/)\r\n */\r\nconst TabsListUnstyled = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  var _ref;\r\n  const {\r\n      component,\r\n      slotProps = {},\r\n      slots = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    isRtl,\r\n    orientation,\r\n    getRootProps,\r\n    processChildren\r\n  } = useTabsList(_extends({}, props, {\r\n    ref\r\n  }));\r\n  const ownerState = _extends({}, props, {\r\n    isRtl,\r\n    orientation\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const TabsListRoot = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\r\n  const tabsListRootProps = useSlotProps({\r\n    elementType: TabsListRoot,\r\n    getSlotProps: getRootProps,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  const processedChildren = processChildren();\r\n  return /*#__PURE__*/_jsx(TabsListRoot, _extends({}, tabsListRootProps, {\r\n    children: processedChildren\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TabsListUnstyled.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * The props used for each slot inside the TabsList.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the TabsList.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport default TabsListUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}