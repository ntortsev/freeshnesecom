{"ast":null,"code":"import _toConsumableArray from \"C:/Users/79507/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/freeshnesecom/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nvar pageSize = 5;\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every(function (o, i) {\n    return isOptionDisabled(o, i);\n  })) {\n    return -1;\n  }\n  var nextFocus = index;\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    var nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, highlightDisabledOptions, isOptionDisabled, disableListWrap, optionComparer) {\n  var _options$nextIndex;\n  var maxIndex = options.length - 1;\n  var defaultHighlightedIndex = -1;\n  var previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(function (option) {\n    return optionComparer(option, previouslyHighlightedOption);\n  });\n  var nextIndexCandidate;\n  var lookupDirection;\n  var wrapAround;\n  switch (diff) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        var newIndex = previouslyHighlightedIndex + diff;\n        wrapAround = !disableListWrap;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(diff) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = diff >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  var nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabledOptions, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\nfunction moveHighlight(previouslyHighlightedOption, diff, props) {\n  var options = props.options,\n    isOptionDisabled = props.isOptionDisabled,\n    disableListWrap = props.disableListWrap,\n    disabledItemsFocusable = props.disabledItemsFocusable,\n    optionComparer = props.optionComparer;\n  return getNewHighlightedOption(options, previouslyHighlightedOption, diff, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : function () {\n    return false;\n  }, disableListWrap != null ? disableListWrap : false, optionComparer != null ? optionComparer : function (o1, o2) {\n    return o1 === o2;\n  });\n}\nfunction toggleSelection(option, selectedOptions, selectionLimit, optionComparer) {\n  if (selectionLimit === 0) {\n    return [];\n  }\n\n  // Selection limit = 1 is a special case - we don't want to allow deselecting the option.\n  if (selectionLimit === 1) {\n    if (optionComparer(selectedOptions[0], option)) {\n      return selectedOptions;\n    }\n    return [option];\n  }\n\n  // The toggled option is selected; remove it from the selection.\n  if (selectedOptions.some(function (so) {\n    return optionComparer(so, option);\n  })) {\n    return selectedOptions.filter(function (so) {\n      return !optionComparer(so, option);\n    });\n  }\n\n  // The toggled option is not selected and the selected array is shorter than the limit - add to the selection.\n  if (selectionLimit === null || selectedOptions.length < selectionLimit) {\n    return [].concat(_toConsumableArray(selectedOptions), [option]);\n  }\n\n  // Truncate the selection to the limit (discard items with lower indexes).\n  var newSelection = selectedOptions.slice(selectedOptions.length - selectionLimit + 1);\n  newSelection.push(option);\n  return newSelection;\n}\nfunction handleOptionSelection(option, state, props) {\n  var _props$optionComparer = props.optionComparer,\n    optionComparer = _props$optionComparer === void 0 ? function (o, v) {\n      return o === v;\n    } : _props$optionComparer,\n    _props$isOptionDisabl = props.isOptionDisabled,\n    isOptionDisabled = _props$isOptionDisabl === void 0 ? function () {\n      return false;\n    } : _props$isOptionDisabl,\n    selectionLimit = props.selectionLimit;\n  var selectedValues = state.selectedValues;\n  var optionIndex = props.options.findIndex(function (o) {\n    return props.optionComparer(option, o);\n  });\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  // if the option is already selected, remove it from the selection, otherwise add it\n  var newSelectedValues = toggleSelection(option, selectedValues, selectionLimit, optionComparer);\n  return {\n    selectedValues: newSelectedValues,\n    highlightedValue: option\n  };\n}\nfunction handleKeyDown(event, state, parameters) {\n  var previouslySelectedValue = state.highlightedValue;\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', parameters)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', parameters)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, parameters)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, parameters)\n      });\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, parameters)\n      });\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, parameters)\n      });\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleOptionSelection(state.highlightedValue, state, parameters);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nvar textCriteriaMatches = function textCriteriaMatches(nextFocus, searchString, stringifyOption) {\n  var _stringifyOption;\n  var text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n};\nfunction handleTextNavigation(state, searchString, props) {\n  var options = props.options,\n    isOptionDisabled = props.isOptionDisabled,\n    disableListWrap = props.disableListWrap,\n    disabledItemsFocusable = props.disabledItemsFocusable,\n    optionComparer = props.optionComparer,\n    optionStringifier = props.optionStringifier;\n  var startWithCurrentOption = searchString.length > 1;\n  var nextOption = startWithCurrentOption ? state.highlightedValue : getNewHighlightedOption(options, state.highlightedValue, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : function () {\n    return false;\n  }, disableListWrap != null ? disableListWrap : false, optionComparer);\n\n  // use `for` instead of `while` prevent infinite loop\n  for (var index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    }\n    // Move to the next element.\n    nextOption = getNewHighlightedOption(options, nextOption, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : function () {\n      return false;\n    }, disableListWrap != null ? disableListWrap : false, optionComparer);\n  }\n\n  // No option match text search criteria\n  return state;\n}\nfunction handleOptionsChange(options, state, props) {\n  var _options$find, _state$selectedValues;\n  var optionComparer = props.optionComparer;\n  var newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(function (option) {\n    return optionComparer(option, state.highlightedValue);\n  })) != null ? _options$find : null;\n\n  // exclude selected values that are no longer in the options\n  var selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  var newSelectedValues = selectedValues.filter(function (selectedValue) {\n    return options.some(function (option) {\n      return optionComparer(option, selectedValue);\n    });\n  });\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValues: newSelectedValues\n  };\n}\nexport default function defaultListboxReducer(state, action) {\n  var type = action.type;\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n    case ActionTypes.blur:\n      return handleBlur(state);\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValues: action.value\n      });\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, state, action.props);\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["_extends","ActionTypes","pageSize","findValidOptionToHighlight","index","lookupDirection","options","focusDisabled","isOptionDisabled","wrapAround","length","every","o","i","nextFocus","nextFocusDisabled","getNewHighlightedOption","previouslyHighlightedOption","diff","highlightDisabledOptions","disableListWrap","optionComparer","_options$nextIndex","maxIndex","defaultHighlightedIndex","previouslyHighlightedIndex","findIndex","option","nextIndexCandidate","newIndex","Math","abs","nextIndex","moveHighlight","props","disabledItemsFocusable","o1","o2","toggleSelection","selectedOptions","selectionLimit","some","so","filter","concat","_toConsumableArray","newSelection","slice","push","handleOptionSelection","state","_props$optionComparer","v","_props$isOptionDisabl","selectedValues","optionIndex","newSelectedValues","highlightedValue","handleKeyDown","event","parameters","previouslySelectedValue","key","handleBlur","textCriteriaMatches","searchString","stringifyOption","_stringifyOption","text","trim","toLowerCase","indexOf","handleTextNavigation","optionStringifier","startWithCurrentOption","nextOption","handleOptionsChange","_options$find","_state$selectedValues","newHighlightedOption","find","selectedValue","defaultListboxReducer","action","type","keyDown","optionClick","blur","setValue","value","setHighlight","highlight","textNavigation","optionsChange"],"sources":["C:/Users/79507/Desktop/Новая папка/freeshnesecom/node_modules/@mui/base/useListbox/defaultListboxReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { ActionTypes } from './useListbox.types';\r\nconst pageSize = 5;\r\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\r\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\r\n    return -1;\r\n  }\r\n  let nextFocus = index;\r\n  for (;;) {\r\n    // No valid options found\r\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\r\n      return -1;\r\n    }\r\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\r\n    if (nextFocusDisabled) {\r\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\r\n      if (wrapAround) {\r\n        nextFocus = (nextFocus + options.length) % options.length;\r\n      }\r\n    } else {\r\n      return nextFocus;\r\n    }\r\n  }\r\n}\r\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, highlightDisabledOptions, isOptionDisabled, disableListWrap, optionComparer) {\r\n  var _options$nextIndex;\r\n  const maxIndex = options.length - 1;\r\n  const defaultHighlightedIndex = -1;\r\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\r\n  let nextIndexCandidate;\r\n  let lookupDirection;\r\n  let wrapAround;\r\n  switch (diff) {\r\n    case 'reset':\r\n      if (defaultHighlightedIndex === -1) {\r\n        return null;\r\n      }\r\n      nextIndexCandidate = 0;\r\n      lookupDirection = 'next';\r\n      wrapAround = false;\r\n      break;\r\n    case 'start':\r\n      nextIndexCandidate = 0;\r\n      lookupDirection = 'next';\r\n      wrapAround = false;\r\n      break;\r\n    case 'end':\r\n      nextIndexCandidate = maxIndex;\r\n      lookupDirection = 'previous';\r\n      wrapAround = false;\r\n      break;\r\n    default:\r\n      {\r\n        const newIndex = previouslyHighlightedIndex + diff;\r\n        wrapAround = !disableListWrap;\r\n        if (newIndex < 0) {\r\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\r\n            nextIndexCandidate = 0;\r\n            lookupDirection = 'next';\r\n          } else {\r\n            nextIndexCandidate = maxIndex;\r\n            lookupDirection = 'previous';\r\n          }\r\n        } else if (newIndex > maxIndex) {\r\n          if (!wrapAround || Math.abs(diff) > 1) {\r\n            nextIndexCandidate = maxIndex;\r\n            lookupDirection = 'previous';\r\n          } else {\r\n            nextIndexCandidate = 0;\r\n            lookupDirection = 'next';\r\n          }\r\n        } else {\r\n          nextIndexCandidate = newIndex;\r\n          lookupDirection = diff >= 0 ? 'next' : 'previous';\r\n        }\r\n      }\r\n  }\r\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabledOptions, isOptionDisabled, wrapAround);\r\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\r\n}\r\nfunction moveHighlight(previouslyHighlightedOption, diff, props) {\r\n  const {\r\n    options,\r\n    isOptionDisabled,\r\n    disableListWrap,\r\n    disabledItemsFocusable,\r\n    optionComparer\r\n  } = props;\r\n  return getNewHighlightedOption(options, previouslyHighlightedOption, diff, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer != null ? optionComparer : (o1, o2) => o1 === o2);\r\n}\r\nfunction toggleSelection(option, selectedOptions, selectionLimit, optionComparer) {\r\n  if (selectionLimit === 0) {\r\n    return [];\r\n  }\r\n\r\n  // Selection limit = 1 is a special case - we don't want to allow deselecting the option.\r\n  if (selectionLimit === 1) {\r\n    if (optionComparer(selectedOptions[0], option)) {\r\n      return selectedOptions;\r\n    }\r\n    return [option];\r\n  }\r\n\r\n  // The toggled option is selected; remove it from the selection.\r\n  if (selectedOptions.some(so => optionComparer(so, option))) {\r\n    return selectedOptions.filter(so => !optionComparer(so, option));\r\n  }\r\n\r\n  // The toggled option is not selected and the selected array is shorter than the limit - add to the selection.\r\n  if (selectionLimit === null || selectedOptions.length < selectionLimit) {\r\n    return [...selectedOptions, option];\r\n  }\r\n\r\n  // Truncate the selection to the limit (discard items with lower indexes).\r\n  const newSelection = selectedOptions.slice(selectedOptions.length - selectionLimit + 1);\r\n  newSelection.push(option);\r\n  return newSelection;\r\n}\r\nfunction handleOptionSelection(option, state, props) {\r\n  const {\r\n    optionComparer = (o, v) => o === v,\r\n    isOptionDisabled = () => false,\r\n    selectionLimit\r\n  } = props;\r\n  const {\r\n    selectedValues\r\n  } = state;\r\n  const optionIndex = props.options.findIndex(o => props.optionComparer(option, o));\r\n  if (isOptionDisabled(option, optionIndex)) {\r\n    return state;\r\n  }\r\n\r\n  // if the option is already selected, remove it from the selection, otherwise add it\r\n  const newSelectedValues = toggleSelection(option, selectedValues, selectionLimit, optionComparer);\r\n  return {\r\n    selectedValues: newSelectedValues,\r\n    highlightedValue: option\r\n  };\r\n}\r\nfunction handleKeyDown(event, state, parameters) {\r\n  const previouslySelectedValue = state.highlightedValue;\r\n  switch (event.key) {\r\n    case 'Home':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', parameters)\r\n      });\r\n    case 'End':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', parameters)\r\n      });\r\n    case 'PageUp':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, parameters)\r\n      });\r\n    case 'PageDown':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, parameters)\r\n      });\r\n    case 'ArrowUp':\r\n      // TODO: extend current selection with Shift modifier\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, parameters)\r\n      });\r\n    case 'ArrowDown':\r\n      // TODO: extend current selection with Shift modifier\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, parameters)\r\n      });\r\n    case 'Enter':\r\n    case ' ':\r\n      if (state.highlightedValue === null) {\r\n        return state;\r\n      }\r\n      return handleOptionSelection(state.highlightedValue, state, parameters);\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\nfunction handleBlur(state) {\r\n  return _extends({}, state, {\r\n    highlightedValue: null\r\n  });\r\n}\r\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\r\n  var _stringifyOption;\r\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\r\n  if (!text || text.length === 0) {\r\n    // Make option not navigable if stringification fails or results in empty string.\r\n    return false;\r\n  }\r\n  return text.indexOf(searchString) === 0;\r\n};\r\nfunction handleTextNavigation(state, searchString, props) {\r\n  const {\r\n    options,\r\n    isOptionDisabled,\r\n    disableListWrap,\r\n    disabledItemsFocusable,\r\n    optionComparer,\r\n    optionStringifier\r\n  } = props;\r\n  const startWithCurrentOption = searchString.length > 1;\r\n  let nextOption = startWithCurrentOption ? state.highlightedValue : getNewHighlightedOption(options, state.highlightedValue, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer);\r\n\r\n  // use `for` instead of `while` prevent infinite loop\r\n  for (let index = 0; index < options.length; index += 1) {\r\n    // Return un-mutated state if looped back to the currently highlighted value\r\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\r\n      return state;\r\n    }\r\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\r\n      // The nextOption is the element to be highlighted\r\n      return _extends({}, state, {\r\n        highlightedValue: nextOption\r\n      });\r\n    }\r\n    // Move to the next element.\r\n    nextOption = getNewHighlightedOption(options, nextOption, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer);\r\n  }\r\n\r\n  // No option match text search criteria\r\n  return state;\r\n}\r\nfunction handleOptionsChange(options, state, props) {\r\n  var _options$find, _state$selectedValues;\r\n  const {\r\n    optionComparer\r\n  } = props;\r\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\r\n\r\n  // exclude selected values that are no longer in the options\r\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\r\n  const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\r\n  return {\r\n    highlightedValue: newHighlightedOption,\r\n    selectedValues: newSelectedValues\r\n  };\r\n}\r\nexport default function defaultListboxReducer(state, action) {\r\n  const {\r\n    type\r\n  } = action;\r\n  switch (type) {\r\n    case ActionTypes.keyDown:\r\n      return handleKeyDown(action.event, state, action.props);\r\n    case ActionTypes.optionClick:\r\n      return handleOptionSelection(action.option, state, action.props);\r\n    case ActionTypes.blur:\r\n      return handleBlur(state);\r\n    case ActionTypes.setValue:\r\n      return _extends({}, state, {\r\n        selectedValues: action.value\r\n      });\r\n    case ActionTypes.setHighlight:\r\n      return _extends({}, state, {\r\n        highlightedValue: action.highlight\r\n      });\r\n    case ActionTypes.textNavigation:\r\n      return handleTextNavigation(state, action.searchString, action.props);\r\n    case ActionTypes.optionsChange:\r\n      return handleOptionsChange(action.options, state, action.props);\r\n    default:\r\n      return state;\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}