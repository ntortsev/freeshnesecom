{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n\n/**\r\n *\r\n * API:\r\n *\r\n * - [useOption API](https://mui.com/base/api/use-option/)\r\n */\nexport default function useOption(params) {\n  var value = params.value,\n    optionRefParam = params.optionRef;\n  var selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('Option must have access to the SelectUnstyledContext (i.e., be used inside a SelectUnstyled component).');\n  }\n  var getOptionProps = selectContext.getOptionProps,\n    getOptionState = selectContext.getOptionState,\n    listboxRef = selectContext.listboxRef,\n    registerHighlightChangeHandler = selectContext.registerHighlightChangeHandler,\n    registerSelectionChangeHandler = selectContext.registerSelectionChangeHandler;\n  var optionState = getOptionState(value);\n  var selected = optionState.selected,\n    highlighted = optionState.highlighted;\n  var rerender = useForcedRerendering();\n  React.useEffect(function () {\n    function updateSelectedState(selectedValues) {\n      if (!selected) {\n        if (Array.isArray(selectedValues)) {\n          if (selectedValues.includes(value)) {\n            rerender();\n          }\n        } else if (selectedValues === value) {\n          rerender();\n        }\n      } else if (Array.isArray(selectedValues)) {\n        if (!selectedValues.includes(value)) {\n          rerender();\n        }\n      } else if (selectedValues !== value) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, value]);\n  React.useEffect(function () {\n    function updateHighlightedState(highlightedValue) {\n      if (highlightedValue === value && !highlighted) {\n        rerender();\n      } else if (highlightedValue !== value && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  }, [registerHighlightChangeHandler, rerender, value, highlighted]);\n  var optionRef = React.useRef(null);\n  var handleRef = useForkRef(optionRefParam, optionRef);\n  React.useEffect(function () {\n    // Scroll to the currently highlighted option\n    if (highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlighted, listboxRef]);\n  return {\n    getRootProps: function getRootProps() {\n      var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({}, otherHandlers, getOptionProps(value, otherHandlers), {\n        ref: handleRef\n      });\n    },\n    highlighted: highlighted,\n    index: optionState.index,\n    selected: selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","SelectUnstyledContext","useForcedRerendering","useOption","params","value","optionRefParam","optionRef","selectContext","useContext","Error","getOptionProps","getOptionState","listboxRef","registerHighlightChangeHandler","registerSelectionChangeHandler","optionState","selected","highlighted","rerender","useEffect","updateSelectedState","selectedValues","Array","isArray","includes","updateHighlightedState","highlightedValue","useRef","handleRef","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","getRootProps","otherHandlers","arguments","length","undefined","ref","index"],"sources":["C:/Users/79507/Desktop/Новая папка/freeshnesecom/node_modules/@mui/base/useOption/useOption.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\r\nimport useForcedRerendering from '../utils/useForcedRerendering';\r\n\r\n/**\r\n *\r\n * API:\r\n *\r\n * - [useOption API](https://mui.com/base/api/use-option/)\r\n */\r\nexport default function useOption(params) {\r\n  const {\r\n    value,\r\n    optionRef: optionRefParam\r\n  } = params;\r\n  const selectContext = React.useContext(SelectUnstyledContext);\r\n  if (!selectContext) {\r\n    throw new Error('Option must have access to the SelectUnstyledContext (i.e., be used inside a SelectUnstyled component).');\r\n  }\r\n  const {\r\n    getOptionProps,\r\n    getOptionState,\r\n    listboxRef,\r\n    registerHighlightChangeHandler,\r\n    registerSelectionChangeHandler\r\n  } = selectContext;\r\n  const optionState = getOptionState(value);\r\n  const {\r\n    selected,\r\n    highlighted\r\n  } = optionState;\r\n  const rerender = useForcedRerendering();\r\n  React.useEffect(() => {\r\n    function updateSelectedState(selectedValues) {\r\n      if (!selected) {\r\n        if (Array.isArray(selectedValues)) {\r\n          if (selectedValues.includes(value)) {\r\n            rerender();\r\n          }\r\n        } else if (selectedValues === value) {\r\n          rerender();\r\n        }\r\n      } else if (Array.isArray(selectedValues)) {\r\n        if (!selectedValues.includes(value)) {\r\n          rerender();\r\n        }\r\n      } else if (selectedValues !== value) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerSelectionChangeHandler(updateSelectedState);\r\n  }, [registerSelectionChangeHandler, rerender, selected, value]);\r\n  React.useEffect(() => {\r\n    function updateHighlightedState(highlightedValue) {\r\n      if (highlightedValue === value && !highlighted) {\r\n        rerender();\r\n      } else if (highlightedValue !== value && highlighted) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerHighlightChangeHandler(updateHighlightedState);\r\n  }, [registerHighlightChangeHandler, rerender, value, highlighted]);\r\n  const optionRef = React.useRef(null);\r\n  const handleRef = useForkRef(optionRefParam, optionRef);\r\n  React.useEffect(() => {\r\n    // Scroll to the currently highlighted option\r\n    if (highlighted) {\r\n      if (!listboxRef.current || !optionRef.current) {\r\n        return;\r\n      }\r\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\r\n      const optionClientRect = optionRef.current.getBoundingClientRect();\r\n      if (optionClientRect.top < listboxClientRect.top) {\r\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\r\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\r\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\r\n      }\r\n    }\r\n  }, [highlighted, listboxRef]);\r\n  return {\r\n    getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getOptionProps(value, otherHandlers), {\r\n      ref: handleRef\r\n    }),\r\n    highlighted,\r\n    index: optionState.index,\r\n    selected\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}